"""
Пакет приложения аутентификации, организованный по принципам Domain-Driven Design (DDD).

Структура пакета отражает разделение ответственности между слоями приложения:

api/
    Публичное API приложения. Содержит HTTP-контроллеры, маршруты и обработчики запросов.
    Преобразует внешние запросы в команды/запросы Application слоя и возвращает ответы.
    Изолирует домен от специфики фреймворка (FastAPI).

domain/
    Ядро приложения - доменный слой. Содержит бизнес-логику, модели, исключения и правила предметной области.
    Не зависит от других слоев. Включает:
        - Агрегаты и сущности (User, Token, Session)
        - Value Objects (Email, PasswordHash)
        - Domain Services (сервисы чистой бизнес-логики)
        - Repository interfaces (порты)
        - Domain Events и исключения

application/
    Слой приложения. Координирует workflow и оркестрирует доменные объекты.
    Содержит Use Cases, Application Services.
    Включает:
        - Command и Query handlers
        - Application Services
        - DTOs (Data Transfer Objects)

infrastructure/
    Реализация технических деталей. Содержит адаптеры для внешних систем и persistence.
    Зависит от Domain и Application слоев. Включает:
        - Repository implementations (адаптеры к БД)
        - Внешние API клиенты
        - Интеграции с messaging, кешем, и т.д.
        - Конфигурацию приложения

Принципы:
- Слои зависят только внутрь (к домену)
- Чистая архитектура с инверсией зависимостей
- Явное разделение ответственности
"""
